/* generating font-size and corresponting line-height */
@function rwd-generate-font-size($label, $breakpoint) {
    $label-position: index($rwd-scale-labels, $label);
    //$breakpoint-base-font-size: map-get(map-get($rwd-typography, $breakpoint), base-font-size);
    $breakpoint-base-font-size: 1rem; // wont change on breakpoints
    $breakpoint-type-scale: map-get(map-get($rwd-typography, $breakpoint), type-scale);
    $font-size: $breakpoint-base-font-size;

    @for $i from 1 to $label-position {
        $font-size: $font-size * $breakpoint-type-scale;
    }

    $line-height: map-get(map-get($rwd-typography, $breakpoint), base-line-height);

    @while $font-size > $line-height {
        //add line-height to line-height till font-size just fits right in
        $line-height: $line-height + map-get(map-get($rwd-typography, $breakpoint), base-line-height);
    }

    $return: join($font-size, $line-height);
    @return $return;
}

/* get color from map */
@function get-color($key: "primary", $version: "base") {
    $return: #F00;

    @if (map-has-key($colors, $key)) {
        $color: map-get($colors, $key);

        @if (map-has-key($color, $version)) {
            $return: map-get($color, $version);
        }
        @else {
            @warn "Die Farbevariante '#{$version}' (der Farbe '#{$key}') ist nicht definiert.";
        }
    }
    @else {
        @warn "Die Farbe '#{$key}' ist nicht definiert.";
    }

    @return $return;
}